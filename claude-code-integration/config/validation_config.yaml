# Claude Code Integration & Validation Engine Configuration

# Core Engine Settings
engine:
  name: "Claude Code Validation Engine"
  version: "1.0.0"
  max_concurrent_validations: 10
  default_timeout_seconds: 300
  enable_learning: true
  enable_caching: true
  cache_ttl_hours: 24

# Claude API Configuration
claude:
  model: "claude-3-5-sonnet-20241022"
  max_tokens: 4096
  temperature: 0.1
  timeout_seconds: 60
  rate_limit:
    requests_per_minute: 50
    tokens_per_minute: 100000
  retry:
    max_attempts: 3
    backoff_factor: 2
    max_delay_seconds: 30

# Container Security Configuration
container:
  runtime: "gvisor"  # Options: docker, gvisor, kata, podman
  default_image: "claude-validation:latest"
  security:
    user: "nobody:nogroup"
    read_only: true
    network_mode: "none"
    no_new_privileges: true
    drop_capabilities:
      - "ALL"
    add_capabilities:
      - "CHOWN"
      - "DAC_OVERRIDE"
      - "FOWNER"
      - "SETGID"
      - "SETUID"
  limits:
    memory_mb: 1024
    cpu_cores: 2.0
    disk_mb: 1024
    timeout_seconds: 300
    max_processes: 100
    max_open_files: 1024
  isolation:
    enable_seccomp: true
    enable_apparmor: true
    enable_selinux: false
    custom_seccomp_profile: true

# Validation Pipeline Configuration
validation:
  enabled_types:
    - "code_quality"
    - "security"
    - "testing"
    - "performance"
    - "compliance"
    - "documentation"
  
  code_quality:
    enabled: true
    tools:
      - name: "eslint"
        languages: ["javascript", "typescript"]
        config_file: ".eslintrc.json"
        severity_mapping:
          error: "high"
          warning: "medium"
          info: "low"
      - name: "pylint"
        languages: ["python"]
        config_file: "pylint.rc"
        severity_mapping:
          error: "high"
          warning: "medium"
          refactor: "low"
          convention: "low"
      - name: "rubocop"
        languages: ["ruby"]
        config_file: ".rubocop.yml"
      - name: "golangci-lint"
        languages: ["go"]
        config_file: ".golangci.yml"
      - name: "clippy"
        languages: ["rust"]
        config_file: "clippy.toml"
    complexity_thresholds:
      cyclomatic: 10
      cognitive: 15
      nesting_depth: 4
      function_length: 50
      file_length: 500

  security:
    enabled: true
    sast_tools:
      - name: "semgrep"
        config: "auto"
        rules: ["security", "owasp-top-10"]
      - name: "bandit"
        languages: ["python"]
        config_file: "bandit.yaml"
      - name: "brakeman"
        languages: ["ruby"]
      - name: "gosec"
        languages: ["go"]
    dast_tools:
      - name: "zap"
        enabled: false  # Requires running application
        config_file: "zap.conf"
    dependency_scanning:
      - name: "safety"
        languages: ["python"]
      - name: "npm-audit"
        languages: ["javascript", "typescript"]
      - name: "bundler-audit"
        languages: ["ruby"]
      - name: "cargo-audit"
        languages: ["rust"]
    vulnerability_databases:
      - "nvd"
      - "github-advisory"
      - "snyk"
    severity_thresholds:
      critical: 0
      high: 5
      medium: 20
      low: 50

  testing:
    enabled: true
    frameworks:
      javascript:
        - "jest"
        - "mocha"
        - "cypress"
      python:
        - "pytest"
        - "unittest"
        - "nose2"
      ruby:
        - "rspec"
        - "minitest"
      go:
        - "go test"
        - "ginkgo"
      rust:
        - "cargo test"
    coverage_requirements:
      minimum_line_coverage: 80
      minimum_branch_coverage: 70
      minimum_function_coverage: 90
    test_types:
      - "unit"
      - "integration"
      - "e2e"
    parallel_execution: true
    timeout_per_test_suite: 300

  performance:
    enabled: true
    profiling:
      memory:
        enabled: true
        threshold_mb: 100
        tools: ["memory_profiler", "valgrind"]
      cpu:
        enabled: true
        threshold_percent: 80
        tools: ["py-spy", "perf"]
      io:
        enabled: true
        threshold_ops_per_sec: 1000
    load_testing:
      enabled: false  # Requires specific setup
      tools: ["locust", "artillery", "k6"]
    benchmarking:
      enabled: true
      baseline_comparison: true
      regression_threshold_percent: 10

  compliance:
    enabled: true
    standards:
      - "pci-dss"
      - "hipaa"
      - "gdpr"
      - "sox"
    license_checking:
      enabled: true
      allowed_licenses:
        - "MIT"
        - "Apache-2.0"
        - "BSD-3-Clause"
        - "ISC"
      forbidden_licenses:
        - "GPL-3.0"
        - "AGPL-3.0"
    code_standards:
      - "clean-code"
      - "solid-principles"
      - "dry-principle"

# Error Analysis Configuration
error_analysis:
  ml_models:
    enabled: true
    model_path: "./ml-models"
    retrain_interval_hours: 168  # Weekly
    confidence_threshold: 0.8
  pattern_recognition:
    enabled: true
    clustering_algorithm: "dbscan"
    similarity_threshold: 0.7
    min_cluster_size: 3
  historical_learning:
    enabled: true
    max_history_entries: 10000
    learning_rate: 0.01
    feature_extraction:
      - "error_message_tfidf"
      - "stack_trace_patterns"
      - "file_path_features"
      - "time_based_features"

# Fix Suggestion Configuration
fix_suggestion:
  enabled: true
  max_suggestions_per_issue: 5
  confidence_threshold: 0.6
  success_probability_threshold: 0.7
  template_matching:
    enabled: true
    template_path: "./fix-templates"
    custom_templates: true
  claude_generation:
    enabled: true
    max_context_length: 8000
    include_similar_fixes: true
    max_similar_fixes: 3
  ranking_weights:
    success_probability: 0.4
    confidence: 0.3
    complexity: 0.2
    time_estimate: 0.1

# Platform Integration Configuration
platforms:
  github:
    enabled: true
    webhook_secret: "${GITHUB_WEBHOOK_SECRET}"
    app_id: "${GITHUB_APP_ID}"
    private_key_path: "${GITHUB_PRIVATE_KEY_PATH}"
    installation_id: "${GITHUB_INSTALLATION_ID}"
    api_url: "https://api.github.com"
    events:
      - "pull_request"
      - "push"
      - "issue_comment"
    auto_comment: true
    auto_status_update: true
    
  gitlab:
    enabled: false
    url: "${GITLAB_URL}"
    token: "${GITLAB_TOKEN}"
    webhook_secret: "${GITLAB_WEBHOOK_SECRET}"
    events:
      - "merge_request"
      - "push"
      - "note"
    
  jenkins:
    enabled: false
    url: "${JENKINS_URL}"
    username: "${JENKINS_USERNAME}"
    token: "${JENKINS_TOKEN}"
    job_template: "claude-validation-template"
    
  azure_devops:
    enabled: false
    organization: "${AZURE_DEVOPS_ORG}"
    project: "${AZURE_DEVOPS_PROJECT}"
    token: "${AZURE_DEVOPS_TOKEN}"
    
  circleci:
    enabled: false
    token: "${CIRCLECI_TOKEN}"
    orb_name: "claude-validation"

# Database Configuration
database:
  url: "${DATABASE_URL}"
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 3600
  echo: false
  tables:
    validation_results: "validation_results"
    error_patterns: "error_patterns"
    fix_suggestions: "fix_suggestions"
    learning_data: "learning_data"
    metrics: "metrics"

# Redis Configuration (for caching and queues)
redis:
  url: "${REDIS_URL}"
  db: 0
  max_connections: 20
  socket_timeout: 5
  socket_connect_timeout: 5
  retry_on_timeout: true
  health_check_interval: 30

# Monitoring and Observability
monitoring:
  enabled: true
  metrics:
    enabled: true
    port: 9090
    path: "/metrics"
    collectors:
      - "validation_duration"
      - "error_count"
      - "fix_success_rate"
      - "container_resource_usage"
      - "claude_api_usage"
  logging:
    level: "INFO"
    format: "json"
    file: "/var/log/claude-validation.log"
    max_size_mb: 100
    backup_count: 5
    structured_logging: true
  tracing:
    enabled: true
    service_name: "claude-validation-engine"
    jaeger_endpoint: "${JAEGER_ENDPOINT}"
    sample_rate: 0.1
  alerting:
    enabled: true
    channels:
      - type: "slack"
        webhook_url: "${SLACK_WEBHOOK_URL}"
        channel: "#alerts"
      - type: "email"
        smtp_server: "${SMTP_SERVER}"
        recipients: ["admin@example.com"]
    rules:
      - name: "high_error_rate"
        condition: "error_rate > 0.1"
        severity: "critical"
      - name: "validation_timeout"
        condition: "avg_validation_time > 600"
        severity: "warning"
      - name: "claude_api_errors"
        condition: "claude_api_error_rate > 0.05"
        severity: "warning"

# Real-time Collaboration
collaboration:
  enabled: true
  websocket:
    port: 8080
    path: "/ws"
    max_connections: 1000
    heartbeat_interval: 30
  features:
    live_validation_updates: true
    shared_fix_suggestions: true
    collaborative_debugging: true
    real_time_metrics: true
  authentication:
    required: true
    jwt_secret: "${JWT_SECRET}"
    token_expiry_hours: 24

# Backup and Recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  storage:
    type: "s3"  # Options: s3, gcs, azure, local
    bucket: "${BACKUP_BUCKET}"
    prefix: "claude-validation-backups"
  encryption:
    enabled: true
    key: "${BACKUP_ENCRYPTION_KEY}"

# Feature Flags
features:
  experimental_ml_models: false
  advanced_security_scanning: true
  performance_profiling: true
  auto_fix_application: false
  multi_language_support: true
  custom_rule_engine: true
  api_rate_limiting: true
  audit_logging: true

# Development and Testing
development:
  debug_mode: false
  mock_claude_api: false
  skip_container_isolation: false
  enable_test_fixtures: false
  log_all_requests: false

