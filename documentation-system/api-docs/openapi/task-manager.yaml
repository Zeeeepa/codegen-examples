openapi: 3.0.3
info:
  title: Codegen Task Manager API
  description: |
    Enhanced MCP-based task management system for AI workflow orchestration.
    Extends claude-task-master with advanced features for multi-agent coordination.
  version: 1.0.0
  contact:
    name: Codegen Support
    url: https://codegen.sh/support
    email: support@codegen.sh
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://api.codegen.sh/v1
    description: Production server
  - url: https://staging-api.codegen.sh/v1
    description: Staging server
  - url: http://localhost:8000/v1
    description: Local development server

security:
  - BearerAuth: []

paths:
  /tasks:
    get:
      summary: List tasks
      description: Retrieve a paginated list of tasks with optional filtering
      tags:
        - Tasks
      parameters:
        - name: status
          in: query
          description: Filter tasks by status
          schema:
            type: string
            enum: [pending, in-progress, validation, complete, failed]
        - name: priority
          in: query
          description: Filter tasks by priority level
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: assignee
          in: query
          description: Filter tasks by assignee ID
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of tasks per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: List of tasks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new task
      description: Create a new task with requirements and metadata
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{taskId}:
    get:
      summary: Get task details
      description: Retrieve detailed information about a specific task
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: Unique identifier for the task
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update task
      description: Update task status, priority, or other metadata
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: Unique identifier for the task
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete task
      description: Delete a task and all associated data
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: Unique identifier for the task
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Task deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workflows:
    get:
      summary: List workflows
      description: Retrieve available workflow templates and configurations
      tags:
        - Workflows
      responses:
        '200':
          description: List of workflows retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workflows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workflow'

    post:
      summary: Create workflow
      description: Create a new workflow from a template or custom configuration
      tags:
        - Workflows
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
      responses:
        '201':
          description: Workflow created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'

  /agents:
    get:
      summary: List agents
      description: Retrieve available AI agents and their capabilities
      tags:
        - Agents
      responses:
        '200':
          description: List of agents retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Agent'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the task
        title:
          type: string
          description: Human-readable task title
        description:
          type: string
          description: Detailed task description
        status:
          type: string
          enum: [pending, in-progress, validation, complete, failed]
          description: Current task status
        priority:
          type: integer
          minimum: 1
          maximum: 5
          description: Task priority (1=lowest, 5=highest)
        assignee:
          type: string
          description: ID of the assigned agent or user
        metadata:
          type: object
          description: Additional task metadata
        dependencies:
          type: array
          items:
            type: string
            format: uuid
          description: List of task IDs this task depends on
        created_at:
          type: string
          format: date-time
          description: Task creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: Task completion timestamp

    CreateTaskRequest:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        priority:
          type: integer
          minimum: 1
          maximum: 5
          default: 3
        assignee:
          type: string
        metadata:
          type: object
        dependencies:
          type: array
          items:
            type: string
            format: uuid

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        status:
          type: string
          enum: [pending, in-progress, validation, complete, failed]
        priority:
          type: integer
          minimum: 1
          maximum: 5
        assignee:
          type: string
        metadata:
          type: object

    Workflow:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        template:
          type: string
        configuration:
          type: object
        created_at:
          type: string
          format: date-time

    CreateWorkflowRequest:
      type: object
      required:
        - name
        - template
      properties:
        name:
          type: string
        description:
          type: string
        template:
          type: string
        configuration:
          type: object

    Agent:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [codegen, claude-code, custom]
        capabilities:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [active, inactive, busy]
        last_seen:
          type: string
          format: date-time

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Tasks
    description: Task management operations
  - name: Workflows
    description: Workflow template and execution management
  - name: Agents
    description: AI agent management and coordination

